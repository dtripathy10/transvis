/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.iitb.civil.tse.csv.table.ui;

import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.swingx.JXLabel;
import org.jdesktop.swingx.JXTable;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//edu.iitb.civil.tse.csv.table.ui//Table//EN",
autostore = false)
@TopComponent.Description(preferredID = "TableTopComponent",
iconBase = "edu/iitb/civil/tse/csv/table/ui/csv.png",
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "edu.iitb.civil.tse.csv.table.ui.TableTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TableAction",
preferredID = "TableTopComponent")
@Messages({
    "CTL_TableAction=Table",
    "CTL_TableTopComponent=Table Window",
    "HINT_TableTopComponent=This is a Table window"
})
public final class TableTopComponent extends TopComponent {

    private ColorRenderer colorReanderer;
    private SampleTableModel tableModel;
    List<String[]> table;
    String[] names;
    String type;

    public TableTopComponent() {
    }

    public TableTopComponent(List<String[]> table, String[] names, String type) {
        this.table = table;
        this.names = names;
        this.type = type;
        initComponents();
        setName(Bundle.CTL_TableTopComponent());
        setToolTipText(Bundle.HINT_TableTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new JScrollPane(jtable);
        colorReanderer=new ColorRenderer(true);
        tableModel = new SampleTableModel(table,names,type);
        jtable = new JXTable(tableModel) {
            public TableCellRenderer getCellRenderer(int row, int column) {

                if (type.equals("matrix")) {
                    if (column == 0) {
                        return colorReanderer;
                    }
                }
                //else...
                return super.getCellRenderer(row, column);
            }
        };
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();

        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(400, 300));

        jScrollPane2.setInheritsPopupMenu(true);
        jScrollPane2.setName(org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jScrollPane2.name")); // NOI18N

        //Install the custom header renderer on the first visible column
        int columnCount = jtable.getModel().getColumnCount();
        for(int i=0;i<columnCount;i++) {
            int vColIndex = i;
            //TableColumn col = jtable.getColumnModel().getColumn(vColIndex);
            //col.setHeaderRenderer(new MyTableHeaderRenderer());
            jtable.getTableHeader().setBorder(BorderFactory.createRaisedBevelBorder());
            jtable.getTableHeader().setBackground(Color.LIGHT_GRAY);
            //
        }
        jtable.setCellSelectionEnabled(true);
        jtable.setColumnControlVisible(true);
        jtable.setShowGrid(true);
        jtable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jtableComponentResized(evt);
            }
        });
        //if(jtable.getModel().getColumnCount()>10) {
            //jtable.setAutoResizeMode(JXTable.AUTO_RESIZE_OFF);
            //}
        //jtable.getTableHeader().setUI(new TableHeaderUI());
        jScrollPane2.setViewportView(jtable);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iitb/civil/tse/csv/table/ui/plus.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iitb/civil/tse/csv/table/ui/statistics.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jButton2.text")); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator3);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iitb/civil/tse/csv/table/ui/finished-work.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jButton3.text")); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);
        jToolBar1.add(jSeparator4);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iitb/civil/tse/csv/table/ui/advertising.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jButton4.text")); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);
        jToolBar1.add(jSeparator2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/iitb/civil/tse/csv/table/ui/archives.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton5, org.openide.util.NbBundle.getMessage(TableTopComponent.class, "TableTopComponent.jButton5.text")); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator5);

        jPanel1.add(jToolBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jtableComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_jtableComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private org.jdesktop.swingx.JXTable jtable;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {

    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing

    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}

class MyTableHeaderRenderer extends JXLabel implements TableCellRenderer {

    @Override
    public void validate() {
    }

    @Override
    public void revalidate() {
    }

    @Override
    protected void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
    }

    @Override
    public void firePropertyChange(String propertyName, boolean oldValue, boolean newValue) {
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        // 'value' is column header value of column 'vColIndex'
        // rowIndex is always -1
        // isSelected is always false
        // hasFocus is always false

        // Configure the component with the specified value
        setText(value.toString());
        setBackground(Color.RED);
        // Set tool tip if desired
        setToolTipText((String) value);
        // Since the renderer is a component, return itself
        return this;
    }
}